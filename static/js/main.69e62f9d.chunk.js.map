{"version":3,"sources":["images/logo-white.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","utils/api.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","href","target","src","logo","alt","CurrentUserContext","React","createContext","Card","props","currentUser","useContext","isOwn","card","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","link","name","onClick","onCardClick","type","aria-label","onCardDelete","onCardLike","length","Main","onEditAvatar","style","backgroundImage","avatar","about","onEditProfile","onAddPlace","cards","map","cardInfo","onShowImage","Footer","PopupWithForm","onCloseByEsc","event","key","onClose","useEffect","document","addEventListener","removeEventListener","isOpen","currentTarget","title","noValidate","onSubmit","children","ImagePopup","api","options","this","_url","baseUrl","_headers","headers","fetch","authorization","then","_getResponseData","data","method","body","JSON","stringify","cardId","cardLikes","addLike","deleteLike","response","ok","json","Promise","reject","Error","status","EditProfilePopup","useState","setName","description","setDescription","e","preventDefault","onUpdateUser","value","onChange","placeholder","id","required","minLength","maxLength","EditAvatarPopup","inputEditAvatarRef","useRef","onUpdateAvatar","current","ref","AddPlacePopup","setTitle","setLink","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","setCurrentUser","setCards","closeAllPopups","getUserInfo","userInfo","catch","err","console","log","getInitialCards","initialCards","Provider","cardData","item","push","changeLikeCardStatus","newCard","state","c","deleteCard","filter","setUserInfo","userData","place","addCard","obj","setUserAvatar","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.69e62f9d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo-white.03b78ada.svg\";","import React from \"react\";\r\nimport logo from './../images/logo-white.svg';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className=\"header\">\r\n            <a href=\"index.html\" target=\"_self\" className=\"logo\">\r\n                <img\r\n                    src={logo}\r\n                    alt=\"Логотип проекта Место\"\r\n                    className=\"header__logo\"\r\n                />\r\n            </a>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nexport const CurrentUserContext = React.createContext();\r\n","import React from \"react\";\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\r\n\r\nfunction Card(props) {\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n    // Определяем, являемся ли мы владельцем текущей карточки\r\n    const isOwn = props.card.owner._id === currentUser._id;\r\n\r\n    // Создаём переменную, которую после зададим в `className` для кнопки удаления\r\n    const cardDeleteButtonClassName = `button card__delete-button ${\r\n        isOwn ? \"card__delete-button_visible\" : \"card__delete-button_hidden\"\r\n    }`;\r\n\r\n    // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\r\n    const isLiked = props.card.likes.some((i) => i._id === currentUser._id);\r\n\r\n    // Создаём переменную, которую после зададим в `className` для кнопки лайка\r\n    const cardLikeButtonClassName = `button card__like-button${isLiked ? \" card__like-button_active\" : \"\"}`;\r\n\r\n    function handleClick() {\r\n        props.onCardClick(props.card);\r\n    }\r\n\r\n    function handleLikeClick() {\r\n        props.onCardLike(props.card);\r\n    }\r\n\r\n    function handleDeleteClick() {\r\n        props.onCardDelete(props.card);\r\n    }\r\n\r\n    return (\r\n        <li className=\"card\">\r\n            <img\r\n                className=\"card__image\"\r\n                src={props.card.link}\r\n                alt={props.card.name}\r\n                onClick={handleClick}\r\n            />\r\n            <button\r\n                type=\"button\"\r\n                aria-label=\"Удалить\"\r\n                className={cardDeleteButtonClassName}\r\n                onClick={handleDeleteClick}\r\n            ></button>\r\n            <div className=\"card__info\">\r\n                <h2 className=\"card__title\">{props.card.name}</h2>\r\n                <div className=\"card__likes\">\r\n                    <button\r\n                        type=\"button\"\r\n                        aria-label=\"Лайкнуть\"\r\n                        className={cardLikeButtonClassName}\r\n                        onClick={handleLikeClick}\r\n                    ></button>\r\n                    <span\r\n                        className=\"card__like-counter\"\r\n                        aria-label=\"Количество лайков\"\r\n                    >\r\n                        {props.card.likes.length}\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"./Card\";\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\r\n\r\nfunction Main(props) {\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n\r\n    return (\r\n        <main>\r\n            <section className=\"profile\">\r\n                <div\r\n                    className=\"profile__avatar-edit\"\r\n                    onClick={props.onEditAvatar}\r\n                    style={{ backgroundImage: `url(${currentUser ? currentUser.avatar : ''})` }}\r\n                ></div>\r\n                <div className=\"profile__about\">\r\n                    <h1 className=\"profile__name\">{currentUser ? currentUser.name : ''}</h1>\r\n                    <p className=\"profile__metier\">{currentUser ? currentUser.about : ''}</p>\r\n                    <button\r\n                        type=\"button\"\r\n                        aria-label=\"Редактировать\"\r\n                        className=\"button profile__edit-button\"\r\n                        onClick={props.onEditProfile}\r\n                    ></button>\r\n                </div>\r\n                <button\r\n                    type=\"button\"\r\n                    aria-label=\"Добавить\"\r\n                    className=\"button profile__add-button\"\r\n                    onClick={props.onAddPlace}\r\n                ></button>\r\n            </section>\r\n\r\n            <section aria-label=\"Карточки с местами\">\r\n                <ul className=\"cards\">\r\n                    {props.cards.map((cardInfo) => (\r\n                        <Card\r\n                            card={cardInfo}\r\n                            key={cardInfo._id}\r\n                            onCardClick={props.onShowImage}\r\n                            onCardLike={props.onCardLike}\r\n                            onCardDelete={props.onCardDelete}\r\n                        />\r\n                    ))}\r\n                </ul>\r\n            </section>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <p className=\"footer__text\">&copy;&nbsp;2020 Mesto Russia</p>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\n\r\nfunction PopupWithForm(props) {\r\n    function onCloseByEsc(event) {\r\n        if (event.key === \"Escape\") {\r\n            props.onClose();\r\n        }\r\n    }\r\n\r\n    function onCloseByOverlay(event) {\r\n        if (event.target === event.currentTarget) {\r\n            props.onClose();\r\n        }\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        document.addEventListener(\"keydown\", onCloseByEsc);\r\n        return () => {\r\n            document.removeEventListener(\"keydown\", onCloseByEsc);\r\n        };\r\n    });\r\n\r\n    return (\r\n        <div\r\n            className={`overlay popup popup_type_${props.name}${\r\n                props.isOpen ? \" popup_opened\" : \"\"\r\n            }`}\r\n            onClick={onCloseByOverlay}\r\n        >\r\n            <div className=\"popup__container\">\r\n                <h2 className=\"popup__title\">{props.title}</h2>\r\n                <button\r\n                    type=\"button\"\r\n                    aria-label=\"Закрыть\"\r\n                    className=\"button popup__close-button\"\r\n                    onClick={props.onClose}\r\n                ></button>\r\n                <form className=\"popup__form\" name={props.name} noValidate onSubmit={props.onSubmit}>\r\n                    {props.children}\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PopupWithForm;\r\n","import React from \"react\";\r\n\r\nfunction ImagePopup(props) {\r\n    function onCloseByEsc(event) {\r\n        if (event.key === \"Escape\") {\r\n            props.onClose();\r\n        }\r\n    }\r\n\r\n    function onCloseByOverlay(event) {\r\n        if (event.target === event.currentTarget) {\r\n            props.onClose();\r\n        }\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        document.addEventListener(\"keydown\", onCloseByEsc);\r\n        return () => {\r\n            document.removeEventListener(\"keydown\", onCloseByEsc);\r\n        };\r\n    });\r\n\r\n    return (\r\n        <div\r\n            className={`overlay popup popup_type_show-image${\r\n                props.card.link && props.card.name ? \" popup_opened\" : \"\"\r\n            }`}\r\n            onClick={onCloseByOverlay}\r\n        >\r\n            <div className=\"popup__container popup__container_type_show-image\">\r\n                <button\r\n                    type=\"button\"\r\n                    aria-label=\"Закрыть\"\r\n                    className=\"button popup__close-button\"\r\n                    onClick={props.onClose}\r\n                ></button>\r\n                <figure className=\"figure\">\r\n                    <img\r\n                        src={props.card.link}\r\n                        alt={props.card.name}\r\n                        className=\"figure__image\"\r\n                    />\r\n                    <figcaption className=\"figure__caption\">\r\n                        {props.card.name}\r\n                    </figcaption>\r\n                </figure>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImagePopup;\r\n","class Api {\n  constructor(options) {\n    this._url = options.baseUrl;\n    this._headers = options.headers;\n  }\n\n  getInitialCards() {\n    return fetch(`${this._url}/cards`, {\n      headers: {\n        authorization: this._headers.authorization\n      }\n    })\n      .then(this._getResponseData);\n  }\n\n  getUserInfo() {\n    return fetch(`${this._url}/users/me`, {\n      headers: {\n        authorization: this._headers.authorization\n      }\n    })\n      .then(this._getResponseData);\n  }\n\n  setUserAvatar(data) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data\n      })\n    })\n      .then(this._getResponseData);\n  }\n\n  setUserInfo(data) {\n    return fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      })\n    })\n      .then(this._getResponseData);\n  }\n\n  addCard(data) {\n    return fetch(`${this._url}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    })\n      .then(this._getResponseData);\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._url}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: {\n        authorization: this._headers.authorization\n      }\n    })\n    .then(this._getResponseData);\n  }\n\n  addLike(cardId, cardLikes) {\n    return fetch(`${this._url}/cards/likes/${cardId}`, {\n      method: 'PUT',\n      headers: this._headers,\n      body: JSON.stringify({\n        likes: cardLikes\n      })\n    })\n      .then(this._getResponseData);\n  }\n\n  deleteLike(cardId) {\n    return fetch(`${this._url}/cards/likes/${cardId}`, {\n      method: 'DELETE',\n      headers: {\n        authorization: this._headers.authorization\n      }\n    })\n    .then(this._getResponseData);\n  }\n\n  changeLikeCardStatus(cardId, isLiked, cardLikes) {\n    if (isLiked) {\n      return this.addLike(cardId, cardLikes);\n    } else {\n      return this.deleteLike(cardId);\n    }\n  }\n\n  _getResponseData(response) {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error(`Ошибка ${response.status}`));\n  }\n}\n\nconst api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-22\",\n  headers: {\n    authorization: \"1e5f7c98-03ad-4c6e-8333-1ab219b8293f\",\n    \"Content-Type\": \"application/json\",\n  }\n});\n\nexport default api;\n","import React from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\r\n\r\nfunction EditProfilePopup(props) {\r\n    const [name, setName] = React.useState(\"\");\r\n    const [description, setDescription] = React.useState(\"\");\r\n\r\n    // Подписка на контекст\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n\r\n    function handleChangeName(e) {\r\n        setName(e.target.value);\r\n    }\r\n\r\n    function handleChangeDescription(e) {\r\n        setDescription(e.target.value);\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n      // Запрещаем браузеру переходить по адресу формы\r\n      e.preventDefault();\r\n\r\n      // Передаём значения управляемых компонентов во внешний обработчик\r\n      props.onUpdateUser({\r\n        name,\r\n        about: description,\r\n      });\r\n    }\r\n\r\n    // После загрузки текущего пользователя из API\r\n    // его данные будут использованы в управляемых компонентах.\r\n    React.useEffect(() => {\r\n        setName(currentUser ? currentUser.name : \"\");\r\n        setDescription(currentUser ? currentUser.about : \"\");\r\n    }, [currentUser]);\r\n\r\n    return (\r\n        <PopupWithForm\r\n            title=\"Редактировать профиль\"\r\n            name=\"profile\"\r\n            isOpen={props.isOpen}\r\n            onClose={props.onClose}\r\n            onSubmit={handleSubmit}\r\n        >\r\n            <label className=\"popup__form-field\">\r\n                <input\r\n                    type=\"text\"\r\n                    value={name}\r\n                    onChange={handleChangeName}\r\n                    name=\"input-name-profile\"\r\n                    placeholder=\"Название\"\r\n                    className=\"popup__input popup__input_type_name-profile\"\r\n                    id=\"input-name-profile\"\r\n                    required\r\n                    minLength=\"2\"\r\n                    maxLength=\"40\"\r\n                />\r\n                <span className=\"popup__input-error input-name-profile-error\"></span>\r\n            </label>\r\n            <label className=\"popup__form-field\">\r\n                <input\r\n                    type=\"text\"\r\n                    value={description}\r\n                    onChange={handleChangeDescription}\r\n                    name=\"input-metier-profile\"\r\n                    placeholder=\"Ссылка на картинку\"\r\n                    className=\"popup__input popup__input_type_metier-profile\"\r\n                    id=\"input-metier-profile\"\r\n                    required\r\n                    minLength=\"2\"\r\n                    maxLength=\"200\"\r\n                />\r\n                <span className=\"popup__input-error input-metier-profile-error\"></span>\r\n            </label>\r\n            <button type=\"submit\" className=\"popup__save-button\">\r\n                Сохранить\r\n            </button>\r\n        </PopupWithForm>\r\n    );\r\n}\r\n\r\nexport default EditProfilePopup;\r\n","import React from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\n\r\nfunction EditAvatarPopup(props) {\r\n    const inputEditAvatarRef = React.useRef();\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        props.onUpdateAvatar({\r\n          avatar: inputEditAvatarRef.current.value,\r\n        });\r\n      }\r\n\r\n    return (\r\n        <PopupWithForm\r\n            title=\"Обновить аватар\"\r\n            name=\"edit-avatar\"\r\n            isOpen={props.isOpen}\r\n            onClose={props.onClose}\r\n            onSubmit={handleSubmit}\r\n        >\r\n            <label className=\"popup__form-field\">\r\n                <input\r\n                    type=\"url\"\r\n                    name=\"input-link-edit-avatar\"\r\n                    placeholder=\"Ссылка на аватарку\"\r\n                    className=\"popup__input popup__input_type_link-avatar\"\r\n                    id=\"input-link-edit-avatar\"\r\n                    required\r\n                    ref={inputEditAvatarRef}\r\n                />\r\n                <span className=\"popup__input-error input-link-edit-avatar-error\"></span>\r\n            </label>\r\n            <button\r\n                type=\"submit\"\r\n                className=\"popup__save-button popup__save-button_inactive\"\r\n\r\n            >\r\n                Создать\r\n            </button>\r\n        </PopupWithForm>\r\n    );\r\n}\r\n\r\nexport default EditAvatarPopup;\r\n","import React from \"react\";\r\nimport PopupWithForm from \"./PopupWithForm\";\r\n\r\nfunction AddPlacePopup(props) {\r\n    const [title, setTitle] = React.useState(\"\");\r\n    const [link, setLink] = React.useState(\"\");\r\n\r\n    function handleChangeTitle(e) {\r\n        setTitle(e.target.value);\r\n    }\r\n\r\n    function handleChangeLink(e) {\r\n        setLink(e.target.value);\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        // Запрещаем браузеру переходить по адресу формы\r\n        e.preventDefault();\r\n\r\n        // Передаём значения управляемых компонентов во внешний обработчик\r\n        props.onAddPlace({\r\n            name: title,\r\n            link,\r\n        });\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        setTitle(\"\");\r\n        setLink(\"\");\r\n    }, []);\r\n\r\n    return (\r\n        <PopupWithForm\r\n            title=\"Новое место\"\r\n            name=\"add-card\"\r\n            isOpen={props.isOpen}\r\n            onClose={props.onClose}\r\n            onSubmit={handleSubmit}\r\n        >\r\n            <label className=\"popup__form-field\">\r\n                <input\r\n                    type=\"text\"\r\n                    value={title}\r\n                    onChange={handleChangeTitle}\r\n                    name=\"input-name-add-card\"\r\n                    placeholder=\"Название\"\r\n                    className=\"popup__input popup__input_type_name-card\"\r\n                    id=\"input-name-add-card\"\r\n                    required\r\n                    minLength=\"2\"\r\n                    maxLength=\"30\"\r\n                />\r\n                <span className=\"popup__input-error input-name-add-card-error\"></span>\r\n            </label>\r\n            <label className=\"popup__form-field\">\r\n                <input\r\n                    type=\"url\"\r\n                    value={link}\r\n                    onChange={handleChangeLink}\r\n                    name=\"input-link-add-card\"\r\n                    placeholder=\"Ссылка на картинку\"\r\n                    className=\"popup__input popup__input_type_link-card\"\r\n                    id=\"input-link-add-card\"\r\n                    required\r\n                />\r\n                <span className=\"popup__input-error input-link-add-card-error\"></span>\r\n            </label>\r\n            <button\r\n                type=\"submit\"\r\n                className=\"popup__save-button popup__save-button_inactive\"\r\n            >\r\n                Создать\r\n            </button>\r\n        </PopupWithForm>\r\n    );\r\n}\r\n\r\nexport default AddPlacePopup;\r\n","import React, { useState } from \"react\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport ImagePopup from \"./ImagePopup\";\nimport api from \"./../utils/api\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\n\nfunction App() {\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n    const [selectedCard, setSelectedCard] = useState({});\n    const [currentUser, setCurrentUser] = useState(null);\n    const [cards, setCards] = React.useState([]);\n\n    function handleEditAvatarClick() {\n        setIsEditAvatarPopupOpen(true);\n    }\n\n    function handleEditProfileClick() {\n        setIsEditProfilePopupOpen(true);\n    }\n\n    function handleAddPlaceClick() {\n        setIsAddPlacePopupOpen(true);\n    }\n\n    function closeAllPopups() {\n        setIsEditAvatarPopupOpen(false);\n        setIsEditProfilePopupOpen(false);\n        setIsAddPlacePopupOpen(false);\n        setSelectedCard({});\n    }\n\n    function handleCardClick(cardData) {\n        setSelectedCard(cardData);\n    }\n\n    function handleUpdateUser(data) {\n        api.setUserInfo(data).then((userData) => {\n            setCurrentUser(userData);\n            this.onClose();\n        });\n    }\n\n    function handleUpdateAvatar(obj) {\n        api.setUserAvatar(obj.avatar).then((userData) => {\n            setCurrentUser(userData);\n            this.onClose();\n        });\n    }\n\n    function handleCardLike(card) {\n        // Снова проверяем, есть ли уже лайк на этой карточке\n        const cardLikes = card.likes;\n        const isLiked = cardLikes.some((item) => item._id === currentUser._id);\n        if (!isLiked) {\n            cardLikes.push(currentUser);\n        }\n\n        // Отправляем запрос в API и получаем обновлённые данные карточки\n        api.changeLikeCardStatus(card._id, !isLiked, cardLikes).then(\n            (newCard) => {\n                setCards((state) =>\n                    state.map((c) => (c._id === card._id ? newCard : c))\n                );\n            }\n        );\n    }\n\n    function handleCardDelete(card) {\n        api.deleteCard(card._id).then(cardData => {\n            setCards((state) => state.filter(c => c._id !== card._id));\n        });\n    }\n\n    function handleAddPlaceSubmit(place) {\n        api.addCard(place).then(newCard => {\n            setCards([newCard, ...cards]);\n            this.onClose();\n        });\n    }\n\n    React.useEffect(() => {\n        api.getUserInfo()\n            .then((userInfo) => {\n                setCurrentUser(userInfo);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }, []);\n\n    React.useEffect(() => {\n        api.getInitialCards()\n            .then((initialCards) => {\n                setCards(initialCards);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }, []);\n\n    return (\n        <CurrentUserContext.Provider value={currentUser}>\n            <div className=\"page\">\n                <div className=\"page__content\">\n                    <Header />\n                    <Main\n                        onEditProfile={handleEditProfileClick}\n                        onAddPlace={handleAddPlaceClick}\n                        onEditAvatar={handleEditAvatarClick}\n                        onShowImage={handleCardClick}\n                        cards={cards}\n                        onCardLike={handleCardLike}\n                        onCardDelete={handleCardDelete}\n                    />\n                    <Footer />\n                </div>\n\n                <EditProfilePopup\n                    isOpen={isEditProfilePopupOpen}\n                    onClose={closeAllPopups}\n                    onUpdateUser={handleUpdateUser}\n                />\n\n                <AddPlacePopup\n                    isOpen={isAddPlacePopupOpen}\n                    onClose={closeAllPopups}\n                    onAddPlace={handleAddPlaceSubmit}\n                />\n\n                <EditAvatarPopup\n                    isOpen={isEditAvatarPopupOpen}\n                    onClose={closeAllPopups}\n                    onUpdateAvatar={handleUpdateAvatar}\n                />\n\n                <PopupWithForm title=\"Вы уверены?\" name=\"confirm\">\n                    <button type=\"submit\" className=\"popup__save-button\">\n                        Да\n                    </button>\n                </PopupWithForm>\n\n                <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n            </div>\n        </CurrentUserContext.Provider>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}